[{"content":"","permalink":"https://holyhope.github.io/project/ovhcloud/managed-kubernetes-service/","summary":"","title":"Managed Kubernetes Service"},{"content":"A Kubernetes operator to manage Harbor application.\nI developped the Harbor Operator for OVHcloud needs when I was employee.\nhttps://github.com/goharbor/harbor-operator/\nGoal Manage hundreds of Harbor at scale.\nTechnical side A Kubernetes operator is an application that control resource life cycle.\nArchitecture Requests flow mxBasePath = '/mxgraph-4.2.2'; mxLoadResources = false; mxLanguage = 'en';   mxStyle = new mxStylesheet();var edgeStyle = new Object();edgeStyle[mxConstants.STYLE_FILLCOLOR] = \"var(--code-bg)\",edgeStyle[mxConstants.STYLE_FONTCOLOR] = \"var(--content)\",edgeStyle[mxConstants.STYLE_FONTFAMILY] = \"-apple-system, BlinkMacSystemFont, \\u0027Segoe UI\\u0027, Roboto, Oxygen, Ubuntu, Cantarell, \\u0027Open Sans\\u0027, \\u0027Helvetica Neue\\u0027, sans-serif\",edgeStyle[mxConstants.STYLE_STROKECOLOR] = \"var(--secondary)\",mxStyle.putDefaultEdgeStyle(edgeStyle);var vertexStyle = new Object();vertexStyle[mxConstants.STYLE_FILLCOLOR] = \"var(--code-bg)\",vertexStyle[mxConstants.STYLE_FONTCOLOR] = \"var(--content)\",vertexStyle[mxConstants.STYLE_FONTFAMILY] = \"-apple-system, BlinkMacSystemFont, \\u0027Segoe UI\\u0027, Roboto, Oxygen, Ubuntu, Cantarell, \\u0027Open Sans\\u0027, \\u0027Helvetica Neue\\u0027, sans-serif\",vertexStyle[mxConstants.STYLE_STROKECOLOR] = \"var(--border)\",mxStyle.putDefaultVertexStyle(vertexStyle);var cellStyle = new Object();cellStyle[mxConstants.STYLE_FILLCOLOR] = \"var(--code-bg)\",cellStyle[mxConstants.STYLE_FONTCOLOR] = \"var(--primary)\",cellStyle[mxConstants.STYLE_FONTFAMILY] = \"-apple-system, BlinkMacSystemFont, \\u0027Segoe UI\\u0027, Roboto, Oxygen, Ubuntu, Cantarell, \\u0027Open Sans\\u0027, \\u0027Helvetica Neue\\u0027, sans-serif\",cellStyle[mxConstants.STYLE_STROKECOLOR] = \"var(--border)\",mxStyle.putCellStyle('default', cellStyle);var cellStyle = new Object();cellStyle[mxConstants.STYLE_FILLCOLOR] = \"var(--code-bg)\",cellStyle[mxConstants.STYLE_FONTCOLOR] = \"var(--primary)\",cellStyle[mxConstants.STYLE_FONTFAMILY] = \"-apple-system, BlinkMacSystemFont, \\u0027Segoe UI\\u0027, Roboto, Oxygen, Ubuntu, Cantarell, \\u0027Open Sans\\u0027, \\u0027Helvetica Neue\\u0027, sans-serif\",cellStyle[mxConstants.STYLE_STROKECOLOR] = \"var(--border)\",mxStyle.putCellStyle('edgelabel', cellStyle);var cellStyle = new Object();cellStyle[mxConstants.STYLE_FILLCOLOR] = \"var(--code-bg)\",cellStyle[mxConstants.STYLE_FONTCOLOR] = \"var(--primary)\",cellStyle[mxConstants.STYLE_FONTFAMILY] = \"-apple-system, BlinkMacSystemFont, \\u0027Segoe UI\\u0027, Roboto, Oxygen, Ubuntu, Cantarell, \\u0027Open Sans\\u0027, \\u0027Helvetica Neue\\u0027, sans-serif\",cellStyle[mxConstants.STYLE_STROKECOLOR] = \"var(--border)\",mxStyle.putCellStyle('ellipse', cellStyle);var cellStyle = new Object();cellStyle[mxConstants.STYLE_FILLCOLOR] = \"var(--code-bg)\",cellStyle[mxConstants.STYLE_FONTCOLOR] = \"var(--primary)\",cellStyle[mxConstants.STYLE_FONTFAMILY] = \"-apple-system, BlinkMacSystemFont, \\u0027Segoe UI\\u0027, Roboto, Oxygen, Ubuntu, Cantarell, \\u0027Open Sans\\u0027, \\u0027Helvetica Neue\\u0027, sans-serif\",cellStyle[mxConstants.STYLE_STROKECOLOR] = \"var(--border)\",mxStyle.putCellStyle('rounded', cellStyle); var doc = mxUtils.load(\"design-flow.xml\").getXml();var model = new mxGraphModel(); model.prefix = 'mxgraph-design-'; model.beginUpdate() try\t{ var codec = new mxCodec(doc); codec.decode(doc.getElementsByTagName(\"mxGraphModel\")[0], model); } finally { model.endUpdate(); } var graph = new mxGraph(null, model, mxConstants.RENDERING_HINT_FASTER, mxStyle); graph.foldingEnabled = false; graph.setResizeContainer(true); graph.setRecursiveResize(true); graph.setCellsSelectable(false); graph.setCellsEditable(false); graph.setCellsDeletable(false); graph.setCellsMovable(false); graph.setVertexLabelsMovable(false); graph.setEdgeLabelsMovable(false); graph.init(document.getElementById('mxgraph-design')); graph.getView().validate(); graph.refresh();  Kubernetes Resources Harbor Operator manages multiple resources which represents running application:\n Docker registry Chartmuseum Notary Trivy Harbor components (Core, JobService, Portal, RegistryController)  The operator can also manage some extra resources:\n Harbor. A full Harbor deployment: all previous software configured to communicate with each others. HarborCluster. A full Harbor deployment with some external resources to deploy databases and redis.  The operator uses external resources to do the job:\n Certificate and Issuer from CertManager. Postgresql from PostgresqlOperator. Redis from RedisOperator.  Here is a sample of an Kubernetes resource that describe a Harbor.\napiVersion: goharbor.io/v1alpha3 kind: HarborCluster metadata: name: my-harbor spec: ... ","permalink":"https://holyhope.github.io/project/habor-operator/","summary":"A Kubernetes operator to manage Harbor application.\nI developped the Harbor Operator for OVHcloud needs when I was employee.\nhttps://github.com/goharbor/harbor-operator/\nGoal Manage hundreds of Harbor at scale.\nTechnical side A Kubernetes operator is an application that control resource life cycle.\nArchitecture Requests flow mxBasePath = '/mxgraph-4.2.2'; mxLoadResources = false; mxLanguage = 'en';   mxStyle = new mxStylesheet();var edgeStyle = new Object();edgeStyle[mxConstants.STYLE_FILLCOLOR] = \"var(--code-bg)\",edgeStyle[mxConstants.STYLE_FONTCOLOR] = \"var(--content)\",edgeStyle[mxConstants.STYLE_FONTFAMILY] = \"-apple-system, BlinkMacSystemFont, \\u0027Segoe UI\\u0027, Roboto, Oxygen, Ubuntu, Cantarell, \\u0027Open Sans\\u0027, \\u0027Helvetica Neue\\u0027, sans-serif\"","title":"Harbor Operator"},{"content":"Managed Public Registry is a product of OVHcloud Public Cloud catalog. Deploy on demand a dedicated Docker Registry in a specified OpenStack project.\nGoal Add a new service to the OVHcloud Public Cloud catalog.\nMy role From project manager, to architect, I was a 1-man team at the begining. Then I onboarded more people, developped an operator and managed ~1000 registries on producion.\nTimeline Bootstrap   December 2018 - Start\npropose a dedicated private registry.\n  February 2019 - Project approved\nGo for Harbor.\n  March 2019 - Proof Of Concept\nAPI which deploys/deletes a set of kubernetes resources.\n  Beta   June 2019 - Public Beta opening.\nEndpoint on APIv6 to deploy/delete a bunch of kubernetes resources.\n  Production   January 2020 - Production ready\nGlobal Availability.\n  March 2021 - Harbor Update\nUpdate to 2.0.\n  Technical side Harbor was chosen as product after an analysis of existing solutions.\nKubernetes \u0026amp; Operator ","permalink":"https://holyhope.github.io/project/ovhcloud/managed-private-registry/","summary":"Managed Public Registry is a product of OVHcloud Public Cloud catalog. Deploy on demand a dedicated Docker Registry in a specified OpenStack project.\nGoal Add a new service to the OVHcloud Public Cloud catalog.\nMy role From project manager, to architect, I was a 1-man team at the begining. Then I onboarded more people, developped an operator and managed ~1000 registries on producion.\nTimeline Bootstrap   December 2018 - Start","title":"Managed Private Registry"},{"content":"You are currently viewing this project. The goal is to show an overview of my projects.\nGoal Show to the world an overview of all projects I worked on.\nTechnical side Powered by hugo and GitHub Pages.\nContent This repository consist of a collection of Markdown files and static media. \nMedia Media hosted on external url are open-licensed.\nMy own media are closed-licensed and not reusable. These are stored under the static/ folder and are scaled to the right size in order to be optimized for the web. Optimized files are generated in static/120x120 (depending of the output resolution).\nBuilding html https://github.com/yuin/goldmark/\nSources files are converted to a beautiful website thanks to hugo, papermod theme and my custom theme.\n","permalink":"https://holyhope.github.io/project/website/","summary":"You are currently viewing this project. The goal is to show an overview of my projects.\nGoal Show to the world an overview of all projects I worked on.\nTechnical side Powered by hugo and GitHub Pages.\nContent This repository consist of a collection of Markdown files and static media. \nMedia Media hosted on external url are open-licensed.\nMy own media are closed-licensed and not reusable. These are stored under the static/ folder and are scaled to the right size in order to be optimized for the web.","title":"My website"},{"content":"About the Private Managed Registry project, here is a landscape of the different solutions on the market on December 2019.\nAttention following information were collected long time ago and are probably obsolete.\nOfficial Docker registry https://docs.docker.com/registry/\n   Strengths Weaknesses Opportunities Threats     Official docker registry. Compliant APIv2. Cheap infrastructure. Prod ready. Integration with Swift storage. Few features. Can add custom frontend and other features manually. Authorization are delegated. Part of the Docker distribution.    Quay enterprise https://quay.io\n   Strengths Weaknesses Opportunities Threats     Supported by CoreOS - RedHat. Pull via p2p. Security scanning. APIv2 supported. HA: multi-region. LDAP authentication. Close sources: licences required. Recommended with Tectonic.  Close sources. May be long to POC. May be hard to integrate with OVHcloud ecosystem. Specific cli.    JFrog https://jfrog.com/\n   Strengths Weaknesses Opportunities Threats     Prod ready (used by other competitors). Can hosts helm charts. Close sources: licences required Can hosts many kind of artifact puppet, maven, \u0026hellip; Close sources. May be long to POC. May be hard to integrate with OVHcloud ecosystem.    Portus http://port.us.org\n   Strengths Weaknesses Opportunities Threats     Security: scans container images for vulnerabilities. Cloud native. Multi-tenant. UI provided: Oauth and OpenID authentication. Built on top of Docker registry. Good documentation.  Ready to deploy on Kubernetes: Helm Chart available. content-signing and validation. May be hard to provide all features to clients nicely: multi tenant ui?    Harbor https://goharbor/io\n   Strengths Weaknesses Opportunities Threats     Cloud native. Multi-tenant. content-signing and validation. Extensible API : To dig. UI provided. Builded on top of Docker registry.  Ready to deploy on Kubernetes: Helm Chart available. Supported by CNCF. Security: scans container images for vulnerabilities. May be hard to provide all features to clients nicely: multi tenant ui?    Popularity  var chartjsColors = [\"#F94144\",\"#F8961E\",\"#90BE6D\",\"#577590\",\"#F3722C\",\"#F9C74F\",\"#43AA8B\"];   const labels = [\"Fork\",\"Star\",\"Watch\"]; const data = { labels: labels, datasets: [ { label: \"Quay enterprise\", data: [\"\",\"\",\"\"], backgroundColor: chartjsColors[ 0 ], }, { label: \"JFrog\", data: [\"\",\"\",\"\"], backgroundColor: chartjsColors[ 1 ], }, { label: \"Portus\", data: [\"396\",\"2148\",\"115\"], backgroundColor: chartjsColors[ 2 ], }, { label: \"Harbor\", data: [\"1695\",\"6138\",\"394\"], backgroundColor: chartjsColors[ 3 ], }, { label: \"Official docker registry\", data: [\"1424\",\"4301\",\"281\"], backgroundColor: chartjsColors[ 4 ], }, ] }; const config = { type: 'bar', data: data, options: { plugins: { title: { display: true, text: 'popularity' }, }, responsive: true, scales: { x: { stacked: true, }, y: { stacked: true } } } }; document.getElementById(\"chartjs-loader\").addEventListener(\"load\", function() { var stackedBar = new Chart('chartjs-popularity', { type: 'bar', data: data, options: { scales: { x: { stacked: false }, y: { stacked: false } } } }); });  It was very important to take care of the popularity of each projects. Popularities were computed easily but roughly, thanks to GitHub interactions.\n","permalink":"https://holyhope.github.io/blog/existing-docker-registry-solutions/","summary":"About the Private Managed Registry project, here is a landscape of the different solutions on the market on December 2019.\nAttention following information were collected long time ago and are probably obsolete.\nOfficial Docker registry https://docs.docker.com/registry/\n   Strengths Weaknesses Opportunities Threats     Official docker registry. Compliant APIv2. Cheap infrastructure. Prod ready. Integration with Swift storage. Few features. Can add custom frontend and other features manually. Authorization are delegated.","title":"Existing Solutions"}]